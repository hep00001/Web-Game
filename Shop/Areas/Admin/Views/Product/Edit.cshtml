@model Models.EntityFramework.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layouts.cshtml";
}

@section header{
    Cập nhật sản phẩm
}

<div class="row">
    <div class="col-md-4">
        <div class="card">
            <div class="card-header card-header-primary">
                <h4 class="card-title">Cập Nhật Sản Phẩm</h4>
            </div>
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)

                @using (Html.BeginForm("Edit", "Product", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="col-md-12">
                            <div class="form-group bmd-form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "bmd-label-floating" })
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group bmd-form-group">
                                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "bmd-label-floating" })
                                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group bmd-form-group">
                                @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "bmd-label-floating" })
                                @Html.EditorFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group bmd-form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "bmd-label-floating" })
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group bmd-form-group">
                                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "bmd-label-floating" })
                                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group bmd-form-group">
                                @Html.LabelFor(model => model.MoreImages, htmlAttributes: new { @class = "bmd-label-floating" })
                                @Html.EditorFor(model => model.MoreImages, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MoreImages, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group bmd-form-group">
                                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "bmd-label-floating" })
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group bmd-form-group">
                                @Html.LabelFor(model => model.PromotionPrice, htmlAttributes: new { @class = "bmd-label-floating" })
                                @Html.EditorFor(model => model.PromotionPrice, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PromotionPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group bmd-form-group">
                                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "bmd-label-floating" })
                                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group bmd-form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="submit" class="btn btn-primary btn-round">Cập Nhật<div class="ripple-container"></div></button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>